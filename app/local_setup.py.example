import mara_acl.config
import mara_cron.config
import mara_db.config
import mara_db.dbs
import mara_pipelines.config
from mara_app.monkey_patch import patch


@patch(mara_db.config.databases)
def databases():
    return {
        # the ETL creates the data sets in this database
        'dwh': mara_db.dbs.PostgreSQLDB(user='root', host='localhost', database='example_project_1_dwh'),

        # for Mara meta data
        'mara': mara_db.dbs.PostgreSQLDB(user='root', host='localhost', database='example_project_1_mara'),

        # for Metabase meta data
        'metabase-metadata': mara_db.dbs.PostgreSQLDB(user='root', host='127.0.0.1',
                                                      database='example_project_1_metabase_metadata'),

        # read-only connection for Metabase to query the data set tables
        'metabase-data-read': mara_db.dbs.PostgreSQLDB(user='metabase', host='127.0.0.1',
                                                       database='example_project_1_metabase_data'),

        # The ETL writes data for Metabase using this connection
        'metabase-data-write': mara_db.dbs.PostgreSQLDB(user='root', host='127.0.0.1',
                                                        database='example_project_1_metabase_data'),

        # The e-commerce example data set
        'olist': mara_db.dbs.PostgreSQLDB(user='root', host='localhost', database='olist_ecommerce')
    }


# Disable http header based authentication
patch(mara_acl.config.require_email_http_header)(lambda: False)


# Activates mara_cron jobs. If not set all jobs are
# by default disabled and can only be activated via
# executing:
#    flask mara_cron.enable --job-id "my_job_id"
patch(mara_cron.config.enabled)(lambda: True)

# Optional parameter to specify a mara instance name
# This is necessary to separate multiple environments running
# on the same user
patch(mara_cron.config.instance_name)(lambda: 'local-dev')


# How many cores to use for running the ETL, defaults to the number of CPUs of the machine
# On production, make sure the ETL does not slow down other services too much
patch(mara_pipelines.config.max_number_of_parallel_tasks)(lambda: 4)

# The first day for which to download and process data (default 2017-01-01).
# Locally, a few days of data is enough to test a pipeline.
# On production, size of days that can be processed depends on machine size.
# One year of data amounts to roughly 50GB database size
# patch(app.config.first_date)(lambda: datetime.date.today() - datetime.timedelta(days=5))

# Whether it is possible to run the ETL from the web UI
# Disable on production
patch(mara_pipelines.config.allow_run_from_web_ui)(lambda: True)
